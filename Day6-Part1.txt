// 1. What type would you choose for the following “numbers”?
//A person’s telephone
string
//A person’s height
double if 1.80m else string like 5'6"
//A person’s age
uint
//A person’s gender (Male, Female, Prefer Not To Answer)
string
//A person’s salary
decimal
//A book’s ISBN
string
//A book’s price
decimal
//A book’s shipping weight
double 
//A country’s population
ulong  
//The number of stars in the universe
ulong
//The number of employees in each of the small or medium businesses in the
//United Kingdom (up to about 50,000 employees per business)
ushort


//2.What are the difference between value type and reference type variables? What is
//boxing and unboxing?

value type such as int, float, decimal, boolean, etc which contain values stored in stack.
reference type such as string, object, etc who contian address pointer in the memory

----------------------------------------------------------------------------
value type                       | reference type 
----------------------------------------------------------------------------
int, float, decimal, boolean etc | string, object, stringbuilder etc
do not accept null    		   | accept null values
stored in stack       		   | stored in heap 
not collected by GC   		   | collected by GC 
create by Enum/Struct 	         | created by Class, Interface, Delegate etc
actual value stored  		   | acutal address pointer stored
-----------------------------------------------------------------------------
//3. What is meant by the terms managed resource and unmanaged resource in .NET

managed resource ==> managed memory by GC, which be collected automatically by GC when there is no more reference to the 
object, they will be collected by GC.

unmanaged resource ==> GC does not know their existence and have to be release from the memory using IDisposable interface. 



//4. Whats the purpose of Garbage Collector in .NET?


GC in .Net automatically handles allocation and deallocation of memory. Automatic management can prevent problems such
as memory leakage, stack overflow etc.


//Controlling Flow and Converting Types
//Test your Knowledge
//1. What happens when you divide an int variable by 0?
Error, can not be divided by zero



//2. What happens when you divide a double variable by 0?
return NaN , float/double behaves diffrerently compare to int/long, float/double has PositiveInfinity/NegativeInfinity while 
int/long does not.


//3. What happens when you overflow an int variable, that is, set it to a value beyond its
//range?
Error, suggest goes to next data type with bigger range or 
integral constant is too large. can not explicitly convert int to other types.


//4. What is the difference between x = y++; and x = ++y;?
y = x++, y = oringial value of x, before add 1 to x. ( y = x, x += 1)
y = ++x, y = new value of x, which adds 1 to itself. ( x += 1, y= x)


//5. What is the difference between break, continue, and return when used inside a loop
statement?

return: return the output, function ends
break: jump out of the loop
continue: skip the current iteration and goes to the next iteration

-- no pass, just leave it blank 


//6. What are the three parts of a for statement and which of them are required?
for (start, end condition, increment)  {
// do something
}

initializer expression, executed once at the beginning of the loop,
conditional expression, executed every iteration, once the conditon is met, stop the iteration
iterator expression, executed at the end of every iteration, 


//7. What is the difference between the = and == operators?

=: declare value, define variables, assign right value to the left object. 
==: equals to, if two object have same values

//8. Does the following statement compile? for ( ; true; ) ;

this will be a dead loop, never ends

//9. What does the underscore _ represent in a switch expression?

_ used to pattern match a variable of type object in a switch statement
This code will match the new _ and discard the variable passed to the case in switch(x)

-- the underscore character is used to represent the default return value

static void Main(string[] args)
{
    object x = 6.4; 
    switch (x)
    {
        case string _:
            Console.WriteLine("it is string");
            break;
        case double _:
            Console.WriteLine("it is double");
            break;
        case int _:
            Console.WriteLine("it is int");
            break;
        default:
            Console.WriteLine("it is Unknown type");
            break;
    }

    // end of main method
}


//10. What interface must an object implement to be enumerated over by using the foreach
statement?
IEnumerator

